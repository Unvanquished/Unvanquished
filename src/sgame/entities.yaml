general:
    common_entity_attributes:
        - name: oldEnt
          type: gentity_t*

messages:
    PrepareNetCode:

    FreeAt:
        - name: freeTime
          type: int

    Ignite:
        - name: fireStarter
          type: gentity_t* # TODO: Use Entity

    Extinguish:
        - name: immunityTime
          type: int

    Heal:
        - name: amount
          type: float
        - name: source
          type: gentity_t* # TODO: Use Entity

    Damage:
        - name: amount
          type: float
        - name: source
          type: gentity_t* # TODO: Use Entity
        - name: location
          type: Util::optional<glm::vec3>
        - name: direction
          type: Util::optional<glm::vec3>
        - name: flags
          type: int
        - name: meansOfDeath
          type: meansOfDeath_t

    Die:
        - name: killer
          type: gentity_t* # TODO: Use Entity
        - name: meansOfDeath
          type: meansOfDeath_t

    FinishConstruction:

    PowerUp:

    PowerDown:

    ApplyDamageModifier:
        - name: damage
          type: float&
        - name: location
          type: Util::optional<glm::vec3>
        - name: direction
          type: Util::optional<glm::vec3>
        - name: flags
          type: int
        - name: meansOfDeath
          type: meansOfDeath_t

    CheckSpawnPoint:
        - name: blocker
          type: Entity*&
        - name: spawnPoint
          type: glm::vec3&

components:
    #####################
    # Common Components #
    #####################

    # TODO: See if we can do without this.
    DeferredFreeing:
        messages:
            - FreeAt

    Thinking:
        requires:
            # Thinking components can't free themselves instantly inside their
            # thinkers, so allow them to free themselves afterwards.
            DeferredFreeing:

    Team:
        parameters:
            team: team_t

    Ignitable:
        parameters:
            alwaysOnFire: bool
        defaults:
            alwaysOnFire: false
        messages:
            - PrepareNetCode
            - Ignite
            - Extinguish
        requires:
            Thinking:

    Health:
        parameters:
            maxHealth: float
        messages:
            - PrepareNetCode
            - Heal
            - Damage

    #-----------------+
    # Client Specific |
    #-----------------+

    Client:
        parameters:
            clientData: gclient_t*
        requires:
            Team:

    # TODO: Get rid of dependency on gentity_t.client. Depend on
    #       PhysicsComponent instead.
    Armor:
        messages:
            - ApplyDamageModifier

    # TODO: Get rid of dependency on gentity_t.client. Depend on
    #       PhysicsComponent instead.
    Knockback:
        messages:
            - Damage

    Spectator:
        messages:
            - PrepareNetCode
        requires:
            Client:

    AlienClass:
        requires:
            Client:
            Team:
                team: TEAM_ALIENS
            Armor:
            Knockback:
            Health:

    HumanClass:
        requires:
            Client:
            Team:
                team: TEAM_HUMANS
            Armor:
            Knockback:
            Health:

    #--------------------+
    # Buildable Specific |
    #--------------------+

    Buildable:
        messages:
            - PrepareNetCode
            - Die
        requires:
            Health:
            Thinking:
            Team:

    AlienBuildable:
        messages:
            - Damage
            - Die
        requires:
            Buildable:
            Team:
                team: TEAM_ALIENS
            Ignitable:

    HumanBuildable:
        messages:
            - Die
        requires:
            Buildable:
            Team:
                team: TEAM_HUMANS

    MainBuildable:
        messages:
            - Damage
            - FinishConstruction
            - Die
        requires:
            Buildable:

    Spawner:
        messages:
            - Die
        requires:
            Team:
            Thinking:

    Turret:
        messages:
            - PrepareNetCode

    Mining:
        messages:
            - PrepareNetCode
            - FinishConstruction
            - Die
        requires:
            Thinking:

    ##############################
    # Entity-specific components #
    ##############################

    # These are needed for various reasons:
    #   - Register specific think methods.
    #   - Export an entity type to the network. (TODO)
    #   - Export a name/descriptions to the gamelogic. (TODO)

    #------------------+
    # Alien Buildables |
    #------------------+

    AcidTube:
        requires:
            AlienBuildable:

    Barricade:
        messages:
            - Damage
            - Die
        requires:
            # TODO: Check if this dependency lets us override animations
            #       reliably in the Damage/Die handlers.
            AlienBuildable:

    Booster:
        requires:
            AlienBuildable:

    Egg:
        messages:
            - CheckSpawnPoint
        requires:
            AlienBuildable:
            Spawner:

    Hive:
        messages:
            - Damage
        requires:
            AlienBuildable:

    Leech:
        requires:
            AlienBuildable:
            Mining:

    Overmind:
        messages:
            - PrepareNetCode
            - FinishConstruction
        requires:
            AlienBuildable:
            MainBuildable:

    Spiker:
        messages:
            - Damage
        requires:
            AlienBuildable:

    Trapper:
        requires:
            AlienBuildable:

    #------------------+
    # Human Buildables |
    #------------------+

    Armoury:
        requires:
            HumanBuildable:

    Drill:
        requires:
            HumanBuildable:
            Mining:

    Medipad:
        messages:
            - Die
        requires:
            HumanBuildable:

    MGTurret:
        messages:
            - PrepareNetCode
            - PowerUp
            - PowerDown
            - Die
        requires:
            HumanBuildable:
            Turret:

    Reactor:
        requires:
            HumanBuildable:
            MainBuildable:

    Rocketpod:
        messages:
            - PrepareNetCode
            - PowerUp
            - PowerDown
            - Die
        requires:
            HumanBuildable:
            Turret:

    Telenode:
        messages:
            - CheckSpawnPoint
        requires:
            HumanBuildable:
            Spawner:


entities:
    ###################
    # Pseudo Entities #
    ###################

    # Every legacy entity without a specific new entity has this.
    Empty:
        components:

    # A generic client entity, not spawned yet.
    Client:
        components:
            Client:
            Team:
                team: TEAM_NONE

    ##################
    # Player Classes #
    ##################

    #-----------------+
    # Spectator Class |
    #-----------------+
    Spectator:
        components:
            Spectator:

    #---------------+
    # Alien Classes |
    #---------------+

    Dretch:
        components:
            AlienClass:

    Mantis:
        components:
            AlienClass:

    Marauder:
        components:
            AlienClass:

    AdvMarauder:
        components:
            AlienClass:

    Dragoon:
        components:
            AlienClass:

    AdvDragoon:
        components:
            AlienClass:

    Tyrant:
        components:
            AlienClass:

    Granger:
        components:
            AlienClass:

    AdvGranger:
        components:
            AlienClass:

    #---------------+
    # Human Classes |
    #---------------+

    Human:
        components:
            HumanClass:

    ######################
    # Buildable Entities #
    ######################

    # Buildables have their individual component that pulls in other components.

    #------------------+
    # Alien Buildables |
    #------------------+

    AcidTube:
        components:
            AcidTube:

    Barricade:
        components:
            Barricade:

    Booster:
        components:
            Booster:

    Egg:
        components:
            Egg:

    Hive:
        components:
            Hive:

    Leech:
        components:
            Leech:

    Overmind:
        components:
            Overmind:

    Spiker:
        components:
            Spiker:

    Trapper:
        components:
            Trapper:

    #------------------+
    # Human Buildables |
    #------------------+

    Armoury:
        components:
            Armoury:

    Drill:
        components:
            Drill:

    Medipad:
        components:
            Medipad:

    MGTurret:
        components:
            MGTurret:

    Reactor:
        components:
            Reactor:

    Rocketpod:
        components:
            Rocketpod:

    Telenode:
        components:
           Telenode:

    #####################
    # Unsorted Entities #
    #####################

    Fire:
        components:
            Ignitable:
                alwaysOnFire: true

# vi:ts=4:et:ai
