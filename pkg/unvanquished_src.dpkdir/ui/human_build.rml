<rml>
<head>
	<link type="text/rcss" href="/ui/shared/basics.rcss" />
	<link type="text/rcss" href="/ui/shared/circlemenu.rcss" />
	<link type="text/rcss" href="/ui/shared/infobox.rcss" />
<style>
	body {
		width: 100%;
		height: 100%;
		background: #00000066;
		text-align: center;
	}
	.circlemenu icon {
		display: inline-block;
		position: absolute;
		bottom: 0.3em;
		right: 0.75em;
		font-size: 1.7em;
	}
	.circlemenu button {
		image-color: #83fff5;
	}
	.circlemenu button.locked {
		decorator: image(/ui/assets/circlemenu/circle-hover);
		image-color: rgb(0, 100, 100);
	}
	.circlemenu button.locked:hover {
		decorator: image(/ui/assets/circlemenu/circle-hover);
		image-color: rgb(0, 120, 120);
	}
	.circlemenu button.locked:hover img,
	.circlemenu button.locked:hover icon,
	.circlemenu button.expensive:hover img,
	.circlemenu button.expensive:hover icon {
		opacity: 1;
	}

	.circlemenu button.locked img {
		opacity: 0.6;
	}
	.circlemenu button.locked icon {
		color: #ffffff;
		opacity: 0.6;
	}

	.circlemenu button.expensive {
		decorator: image(/ui/assets/circlemenu/circle-hover);
		image-color: rgb(0, 150, 150);
	}
	.circlemenu button.expensive:hover {
		decorator: image(/ui/assets/circlemenu/circle-hover);
		image-color: rgb(0, 170, 170);
	}

	.circlemenu button.expensive img {
		opacity: 0.6;
	}
	.circlemenu button.expensive:hover img {
		opacity: 1;
	}
	.circlemenu button.expensive icon {
		color: #0a00c5;
		opacity: 0.7;
	}

	.circlemenu button {
		position: relative;
	}

	.circlemenu button.active {
		decorator: image(/ui/assets/circlemenu/circle-hover);
		image-color: rgb(0, 200, 200);
	}
	.circlemenu button.active:hover {
		decorator: image(/ui/assets/circlemenu/circle-hover);
		image-color: rgb(0, 220, 220);
	}
	.circlemenu button.active icon {
		color: #9affbd;
	}
	.circlemenu button.active .sell {
		display: none;
	}
	tabs {
		display: none;
	}
	#humanBuildBackdrop {
		background-color: rgba(0, 200, 200, 26);
	}
</style>
<script src="lua/util.lua" />
<script src="lua/circle_menu.lua" />
<script>
	HBuildMenu = CircleMenu:New('HBuildMenu', 'humanBuild')

	function HBuildMenu:PopulateItems()
		CDataSource.Build("humanBuildList", "default")
		self.items = CDataSource.Read("humanBuildList", "default", "icon,name,description,cost,availability")
	end
	function HBuildMenu:RMLButton(index)
		return string.format(
			'<button class="%s" onclick="%s:Click(%d,event)" onmouseover="%s:Hover(%d)">%s<img src="/%s"/></button>',
			self.items[index][5], self.handle, index, self.handle, index, AvailabilityIcon(self.items[index][5]), self.items[index][1]
		)
	end
	function HBuildMenu:Select(index, event)
		if index > #self.items then return end
		CDataSource.Build("humanBuildList", "default")
		local data = CDataSource.Read("humanBuildList", "default", "availability,cmdName")[index]
		if data[1] == "available" then
			Cmd.exec("build " .. data[2])
			self:Quit(event)
		else
			event:StopPropagation()
		end
	end
	function HBuildMenu:Highlight(index)
		if index == nil or index <= 0 then
			self.document:GetElementById("b_name").inner_rml = ""
			self.document:GetElementById("b_price").inner_rml = ""
			self.document:GetElementById("b_desc").inner_rml = ""
		else
			self.document:GetElementById("b_name").inner_rml = self.items[index][2]
			self.document:GetElementById("b_price").inner_rml = self.items[index][4]
			self.document:GetElementById("b_desc").inner_rml = self.items[index][3]
		end
	end
	function hBuildQuit(event)
		if HBuildMenu then
			HBuildMenu:Quit(event)
		end
	end
</script>
</head>
<body id="human_build" class="circlemenu human" onkeydown="HBuildMenu:HandleKey(event)" onshow="HBuildMenu:Build(document)" onclick="hBuildQuit(event)">
<tabset class="circlemenu">
<tab><translate>Build</translate></tab>
<panel>
<div class="circlemenu-circle" id="humanBuildKeyboardHints"/>
<div class="circlemenu-circle" id="humanBuildMenu"/>
<div class="backdrop" id="humanBuildBackdrop" onmousemove="HBuildMenu:BackdropCapture(event)" onclick="event:StopPropagation()" onmouseup="HBuildMenu:BackdropClick(event)"/>
<div class="infobox">
<h2 id="b_name"></h2>
<p class="text"><translate>Price:</translate>&nbsp;<span id="b_price" /><br/>
<span id="b_desc" /></p>
</div>
</panel>
</tabset>
</body>
</rml>
