<rml>
	<head>
		<link type="text/rcss" href="/ui/shared/basics.rcss" />
		<link type="text/rcss" href="/ui/shared/circlemenu.rcss" />
		<link type="text/rcss" href="/ui/shared/infobox.rcss" />
		<style>
			body {
				width: 100%;
				height: 100%;
				background: #00000066;
				text-align: center;
			}

			.circlemenu icon {
				display: inline-block;
				position: absolute;
				bottom: 0.3em;
				right: 0.75em;
				font-size: 1.7em;
			}

			.circlemenu button {
				position: relative;
				image-color: rgb(100, 100, 100);
			}

			.circlemenu button:focus,
			.circlemenu button:hover {
				image-color: rgb(255, 255, 255);
			}

			.circlemenu button img {
				color: rgb(230, 230, 230);
			}

			#beaconBackdrop {
				background-color: rgba(100, 100, 100, 30);
			}
		</style>
		<script src="lua/util.lua" />
		<script src="lua/circle_menu.lua" />
		<script>
			BeaconMenu = CircleMenu:New('BeaconMenu', 'beacon')
			BeaconMenu.quitting = false

			function BeaconMenu:PopulateItems()
				CDataSource.Build("beaconList", "default")
				self.items = CDataSource.Read("beaconList", "default", "icon,name,desc")
			end
			function BeaconMenu:Select(index, event)
				if index > #self.items then return end
				Cmd.exec("beacon " .. self.items[index][2])
				self:Quit(event)
			end
			function BeaconMenu:Highlight(index)
				local nameElement = self.document:GetElementById("beaconName")
				local descElement = self.document:GetElementById("beaconDesc")
				nameElement.inner_rml = ""
				descElement.inner_rml = ""

				if index == nil or index <= 0 then
					return
				end
				local beacon = self.items[index]
				nameElement:AppendChild(self.document:CreateTextNode(beacon[2]))
				descElement:AppendChild(self.document:CreateTextNode(beacon[3]))
			end
			function BeaconMenu:RMLButton(index)
				return string.format( '<button onclick="%s:Click(%d, event)" onmouseover="%s:Hover(%d)"><img src="/%s"/></button>',
					self.handle, index, self.handle, index, self.items[index][1])
			end

			function beaconQuit(event, document)
				if BeaconMenu then
					BeaconMenu:Quit(event)
				end
			end
		</script>
	</head>
	<body id="ingame_beaconmenu" class="circlemenu" onkeydown="BeaconMenu:HandleKey(event)" onshow="BeaconMenu:Build(document)" onclick="beaconQuit(event, document)">
		<tabset class="circlemenu">
			<tab><translate>Beacons</translate></tab>
			<panel>
				<div class="circlemenu-circle" id="beaconKeyboardHints"/>
				<div class="circlemenu-circle" id="beaconMenu"/>
				<div class="backdrop" id="beaconBackdrop" onmousemove="BeaconMenu:BackdropCapture(event)" onclick="event:StopPropagation()" onmouseup="BeaconMenu:BackdropClick(event)"/>
				<div style="position: absolute; left: 0; width: 40%;">
					<div class="infobox">
						<h2 id="beaconName"></h2>
						<p class="text" style="text-align: left;" id="beaconDesc"></p>
					</div>
				</div>
			</panel>
		</tabset>
	</body>
</rml>
