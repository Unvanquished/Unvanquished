#define WANTS_TO_BUILD 1

selector
{
	behavior subroutine_use_medkit

	sequence
	{
		condition levelTime >= 60000
			&& ( numUsersInTeam == 0
				 || ( numOurBuildings( E_H_SPAWN ) < 2
					  && numOurBuildings( E_H_SPAWN ) < cvar( "g_bot_buildNumTelenodes" ) ) )
			&& cvar( "g_bot_buildHumans" )
			&& usableBuildPoints >= chosenBuildableCost
			&& !teamateHasWeapon( WP_HBUILD )
			&& blackboardNumTransient( WANTS_TO_BUILD ) < 1
		selector
		{
			decorator return ( STATUS_FAILURE )
			{
				// this will be reset to 0 before the next execution
				action blackboardNoteTransient( WANTS_TO_BUILD )
			}

			sequence
			{
				condition !haveWeapon( WP_HBUILD )
				selector
				{
					condition myTimer >= 20000
					{
						action suicide
					}
					sequence
					{
						decorator return( STATUS_SUCCESS )
						{
							action equip
						}
						action buyPrimary( WP_HBUILD )
					}
					condition alertedToEnemy
					{
						action fight
					}
					action rush
					action roam
				}
			}

			decorator return( STATUS_FAILURE )
			{
				action buildNowChosenBuildable
			}
			action roamInRadius( E_H_REACTOR, 700 )
			action roam
		}
	}

	decorator return ( STATUS_FAILURE )
	{
		action resetMyTimer
	}

	sequence
	{
		condition alertedToEnemy
		condition percentAmmoClip > 0 || percentClips > 0
		{
			selector
			{
				decorator timer ( 1000 )
				{
					condition haveWeapon( WP_LUCIFER_CANNON ) && ( distanceTo( E_H_REACTOR ) <= 400 || distanceTo( E_H_ARMOURY ) <= 400 )
					{
						action buyPrimary( WP_PULSE_RIFLE )
					}
				}
				condition haveWeapon( WP_HBUILD ) && ( !buildingIsDamaged || teamateHasWeapon( WP_HBUILD ) )
				{
					selector
					{
						action equip
						action flee
					}
				}

				decorator timer( 1000 )
				{
					selector
					{
						// defending reactor, or try to avoid being killed while healing (hence the different values)
						// the isVisible check is here to prevent "defending" when enemies are detected by radars
						condition ( ( distanceTo( E_H_REACTOR ) <= 300 || distanceTo( E_H_MEDISTAT ) <= 250 ) && isVisible( E_ENEMY ) )
						{
							action fight
						}

						sequence
						{
							condition ( healScore > 0.5 && percentHealth( E_GOAL ) > 0.3  && random > 0.3 )
							condition baseRushScore < 0.75
							behavior subroutine_heal_humans
						}
					}
				}

				behavior subroutine_throw_grenade
				action fight
			}
		}
	}

	sequence
	{
		condition healScore > 0.25
		behavior subroutine_heal_humans
	}

	behavior subroutine_repair
	behavior subroutine_reload
	action equip

	selector
	{
		condition percentAmmoClip == 0 && percentClips == 0
		{
			// refill at a suitable building
			// TODO: reload energy weapons at reactor etc
			action moveTo( E_H_ARMOURY )
			// TODO: wait until clip weapon is reloaded
			// or even better: make the game refill everything at once
		}
	}

	sequence
	{
		// the bot cannot refill or equip, it must fight with the blaster
		condition alertedToEnemy
		action fight
	}

	condition baseRushScore > 0.5
	{
		action rush
	}

	action roam
}
