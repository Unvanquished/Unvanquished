EARLY VERSION
EARLY VERSION
The "mod" section is not written yet! 
EARLY VERSION
EARLY VERSION

This document describes how packages are done in unvanquished.

Games running in Daemon-engine are only able to see files
inside a VFS (Virtual File System), built mostly from
package contents (and some other server side files).

Packages are compressed zip archives, which can be
generated by standard archivers.

To create such an archive, place all and only the needed
files (beware of hiden files, they can prevent the game from
loading packages!) in a folder, and then create an archive
from that folder.
Note that it is important that the folder itself does not
ends in the archive.
Example (directory is named "mod-example.dpkdir"):

```
cd mod-example.dpkdir
7z -tzip -mx=9 ../mod-example_1.dpk *
```

# Naming scheme

Packages' names obey to a naming scheme, some things being
mandatory, other ones being simple conventions.

Files are named as such:
[PREFIX]NAME'_'VERSION'.'EXTENSION

## Prefix

PREFIX can take following values:
* "map-": the package contains one and only one map. This is
  the only case in which a prefix is _required_.
* "tex-": the package contains only textures. Recommended.
* "res-": the package contains various content, mostly
  artistic. Recommended.
* "mod-": the package contains files that impact gameplay
  such as configuration files, executables, GUI/HUD files...
  Recommended.

Absence of prefix is used to indicate a complete game, such
as "unvanquished".

## Name

Name of the package.
For any package *except* for maps, the PREFIX (if any) is
part of the name when referenced by other files.

For example, to refer to, i.e. `map-yocto_1.0.1.dpk`, you
only need to use `yocto`, but if you need to refer to
`res-tremulous_1.2.1.dpk`, you will need `res-tremulous`.

## Version

Version of the package.
This follows debian's conventions regarding comparison
priority.
Characters allowed: [a-zA-Z0-9~-]

# Content

There are 2 major kinds of packages: game modifications and
maps.

In any case, there are 2 specific files that can be created
at the "root" of the package:

* DEPS: packages listed in this file are to be loaded for
  the mod to work;
* DELETED: when an already loaded package includes a file
  listed here, it is removed from the VFS;

Those files are both a list of names, one name per line.

## Maps

Each map package must contain a single map.
This section will consider an example map package named
`map-example_0.1.2.dpk`.

The archive must contain a file named `./maps/example.bsp`.
Most of the files are placed according to their description
in the .bsp file.

Following files are only recommended:

* minimap
* levelshot
* licence
* about
* AI navigation files (as of 0.53)
* arena

Other files are only recommended
It is recommended to also add a levelshot and a minimap.
As of 0.53, navigation files for AIs (as of 0.53) are also
recommended.
It is possible to embed an arena file, which will describe
the map further, despite currently not used by Unvanquished.
Still, other tools can use information there.

### Minimap

Minimap is built from the files:

* minimaps/MAPNAME.minimap
* minimaps/MAPNAME.crn

The `.minimap` file is a text file describing how to render
the `.crn` (crunch) file.
The crunch file can be generated by the following commands:

```
q3map2 -game unvanquished -minimap maps/example.bsp
crunch -file minimaps/example.tga -out minimaps/example.crn -fileformat crn
```

Recommended versions of those tools can be found here:

* q3map2: https://gitlab.com/xonotic/netradiant/-/tree/master/tools/quake3/q3map2
* crunch: https://github.com/DaemonEngine/crunch

### Levelshot

Levelshots are images that players will see while loading
the map.
They need to be placed in `./meta/MAPNAME/` and named after
the map.
Unvanquished supports various formats, webp being recommended,
but jpg or png also works.

Example: `./meta/example/example/example.webp`

### Licence and about

Those files are purely optional but describes the intent of
the mapper concerning legals, what they tried to achieve, or
a list of persons they want to thank or mention for various
reasons.
They are often placed in a `about` folder but there is no
restriction of any sort in that regard.

### AI navigation files (as of 0.53)

If you choose to support AIs in your map, you need at least
one `.navMesh` file per class, while the `.navcon` file is
optional.

`.navMesh` files are generated by `daemonmap` (as of 0.53)
and expected to be generated by the game in near future.

`.navcon` files, which are optional and must be created
manually in `/devmap` mode.

Supported classes are:

* human_naked (which includes light and medium armors)
* human_bsuit
* builder (granger)
* builderupg (adv granger)
* level0 (dretch)
* level1 (mantis)
* level2 (marauder)
* level2upg (adv marauder)
* level3 (dragoon)
* level3upg (adv dragoon)
* level4 (tyrant)

Resulting files should be placed in the `maps` folder, and
named like: MAPNAME-CLASSNAME.TYPE.
With our example, for tyrants, we would have:

* `./maps/example-level4.navMesh`
* `./maps/example-level4.navcon` (optional)

### Arena file

Arena files are currently (as of 0.53) not used by the game
itself, but can be used by various other tools.

They are named after the map, and placed in `./meta/MAPNAME`
Example (`./meta/example/example/example.arena`):

```
{
map "example"
longname "Example map, for the sake of it"
type "unvanquished"
}
```

## Mods
